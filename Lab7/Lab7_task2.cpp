/*

–ó–∞–¥–∞–Ω–∏–µ 2. –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª ùõº[ ]
(–≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –Ω–∞ —è–∑—ã–∫–µ –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è).
3 –ù–∞–π—Ç–∏ —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞

*/

#include <iostream>

#ifdef __cplusplus
extern "C" int sum(int* array, int size);
#else
int sum(int* array, int size);
#endif

static void print_array(int* arr, int number_of_elements);
int* generate_array(int number_of_elements);

int main()
{
  int n = 10;
  int* array = generate_array(n);
  print_array(array, n);
  int sum_of_elements  = sum(array, n);
  std::cout << "\nSum of elements = " << sum_of_elements << '\n';
  print_array(array, n);
  return 0;
}

int* generate_array(int number_of_elements) {

	int* generated_array = new int[number_of_elements];
	if (generated_array != nullptr) {
		for (int i = 0; i < number_of_elements; i++) {
			generated_array[i] = rand() % 100;
		}
	}
	return generated_array;
}


static void print_array(int* arr, int number_of_elements) {
	for (int i = 0; i < number_of_elements; i++) {
		std::cout << arr[i] << " ";
	}
  std::cout << '\n';
}
